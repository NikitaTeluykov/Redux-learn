{"ast":null,"code":"const initialState = {\n  counter2: 200\n};\nexport default function counter2() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADD2':\n      return {\n        counter: state.counter + action.payload\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/var/www/redux-app/src/redux/reducers/counter2.js"],"names":["initialState","counter2","state","action","type","counter","payload"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE;AADO,CAArB;AAIA,eAAe,SAASA,QAAT,GAAgD;AAAA,MAA9BC,KAA8B,uEAAtBF,YAAsB;AAAA,MAARG,MAAQ;;AAE3D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,MAAL;AACI,aAAO;AACHC,QAAAA,OAAO,EAAEH,KAAK,CAACG,OAAN,GAAgBF,MAAM,CAACG;AAD7B,OAAP;;AAGJ;AACI,aAAOJ,KAAP;AANR;AAQH","sourcesContent":["const initialState = {\n    counter2: 200\n}\n\nexport default function counter2(state = initialState, action) {\n\n    switch (action.type) {\n        case 'ADD2':\n            return {\n                counter: state.counter + action.payload\n            }\n        default:\n            return state\n    }\n}"]},"metadata":{},"sourceType":"module"}